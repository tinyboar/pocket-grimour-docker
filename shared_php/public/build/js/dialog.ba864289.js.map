{"version":3,"file":"js/dialog.ba864289.js","mappings":"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","sources":["webpack:///./assets/js/lib/dialog-polyfill.js","webpack:///./assets/js/dialog.js"],"sourcesContent":["// https://github.com/GoogleChrome/dialog-polyfill\n// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n  return target.dispatchEvent(event);\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function(el) {\n    return el + ':not([disabled])';\n  });\n  // TODO(samthor): tabindex values that are not numeric are not focusable.\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n\n/**\n * @param {!Event} event\n * @return {?Element}\n */\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n  if (!submitter) {\n    var target = event.target;\n    var root = ('getRootNode' in target && target.getRootNode() || document);\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n  return submitter;\n}\n\n/**\n * @param {!Event} event\n */\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  var form = /** @type {!HTMLFormElement} */ (event.target);\n\n  // We'd have a value if we clicked on an imagemap.\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n  if (value === null && submitter) {\n    value = submitter.value;\n  }\n\n  // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n  var dialog = findNearestDialog(form);\n  if (!dialog) {\n    return;\n  }\n\n  // Prefer formmethod on the button.\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n  if (formmethod !== 'dialog') {\n    return;\n  }\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup'  , this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click'    , this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = /** @type {HTMLDialogElement.prototype} */ ({\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n\n});\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n    if (dialog) {\n      return;  // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;\n","import dialogPolyfill from \"./lib/dialog-polyfill.js\";\n\nconst dialogs = document.querySelectorAll(\"dialog\");\n\ndialogs.forEach((dialog) => {\n\n    dialog.classList.add(\"dialog--polyfilled\");\n    dialogPolyfill.registerDialog(dialog);\n\n});\n\n// Attempt to fix a bug on Firefox Mobile where the overlay wouldn't cover the\n// entire screen when the browser UI changed size - #109.\nconst observer = new MutationObserver((list) => {\n\n    list.forEach(({ type, attributeName, target }) => {\n\n        if (type !== \"attributes\" || attributeName !== \"open\" || !target.open) {\n            return;\n        }\n\n        const width = `${document.body.offsetWidth}px`;\n        const height = `${document.body.offsetHeight}px`;\n\n        const backdrop = target.nextSibling;\n        if (backdrop.className.match(/\\bbackdrop\\b/)) {\n            backdrop.style.setProperty(\"--width\", width);\n            backdrop.style.setProperty(\"--height\", height);\n        }\n\n        const overlay = document.querySelector(\"._dialog_overlay\");\n        if (overlay) {\n            overlay.style.setProperty(\"--width\", width);\n            overlay.style.setProperty(\"--height\", height);\n        }\n\n    });\n\n});\ndialogs.forEach((dialog) => observer.observe(dialog, { attributes: true }));\n"],"names":["supportCustomEvent","window","CustomEvent","safeDispatchEvent","target","event","check","type","toLowerCase","dispatchEvent","findNearestDialog","el","localName","parentElement","parentNode","host","safeBlur","shadowRoot","activeElement","blur","document","body","inNodeList","nodeList","node","i","length","isFormMethodDialog","hasAttribute","getAttribute","findFocusableElementWithin","hostElement","query","map","push","querySelector","join","Element","prototype","elems","querySelectorAll","tagName","isConnected","element","contains","findFormSubmitter","submitter","form","HTMLFormElement","dialogPolyfill","formSubmitter","getRootNode","maybeHandleSubmit","defaultPrevented","value","imagemapUseValue","dialog","preventDefault","close","dialogPolyfillInfo","this","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","addEventListener","returnValue","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","timeout","removed","cb","downgradeModal","delayModel","ev","cand","substr","clearTimeout","setTimeout","forEach","name","Object","defineProperty","set","setOpen","get","backdrop_","createElement","className","backdropMouseEvent_","_typeof","x","createEvent","initCustomEvent","bubbles","cancelable","detail","Event","style","zIndex","top","removeChild","dm","removeDialog","removeAttribute","e","focus","fake","insertBefore","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","stopPropagation","focus_","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","s","getComputedStyle","invalid","k","ok","undefined","opacity","position","webkitOverflowScrolling","createsStackingContext","console","warn","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","scrollTop","documentElement","topValue","innerHeight","offsetHeight","Math","max","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","selectorText","cssTop","getPropertyValue","cssBottom","bottom","isInlinePositionSetByStylesheet","HTMLDialogElement","forceRegisterDialog","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","concat","DialogManager","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","appendChild","containedByTopDialog_","candidate","composedPath","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","slice","indexOf","allowed","unshift","index","splice","testForm","method","methodDescriptor","getOwnPropertyDescriptor","realGet","call","realSet","v","shift","offsetX","offsetY","nativeFormSubmit","submit","dialogs","classList","add","registerDialog","observer","list","_ref","attributeName","width","offsetWidth","height","backdrop","match","setProperty"],"sourceRoot":""}