<?php

namespace Container7f1lcTY;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getArgumentResolver_ServiceService extends App_KernelProdContainer
{
    /*
     * Gets the private 'argument_resolver.service' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\DataController::urlAction' => ['privates', '.service_locator.q2ji3lu', 'get_ServiceLocator_Q2ji3luService', true],
            'App\\Controller\\MainController::homebrewAction' => ['privates', '.service_locator.BMfTRHi', 'get_ServiceLocator_BMfTRHiService', true],
            'App\\Controller\\MainController::indexAction' => ['privates', '.service_locator.kdjf4Uc', 'get_ServiceLocator_Kdjf4UcService', true],
            'App\\Controller\\MainController::sheetAction' => ['privates', '.service_locator.PXujlPP', 'get_ServiceLocator_PXujlPPService', true],
            'App\\Controller\\MainController::tokensAction' => ['privates', '.service_locator.STUrviZ', 'get_ServiceLocator_STUrviZService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\DataController:urlAction' => ['privates', '.service_locator.q2ji3lu', 'get_ServiceLocator_Q2ji3luService', true],
            'App\\Controller\\MainController:homebrewAction' => ['privates', '.service_locator.BMfTRHi', 'get_ServiceLocator_BMfTRHiService', true],
            'App\\Controller\\MainController:indexAction' => ['privates', '.service_locator.kdjf4Uc', 'get_ServiceLocator_Kdjf4UcService', true],
            'App\\Controller\\MainController:sheetAction' => ['privates', '.service_locator.PXujlPP', 'get_ServiceLocator_PXujlPPService', true],
            'App\\Controller\\MainController:tokensAction' => ['privates', '.service_locator.STUrviZ', 'get_ServiceLocator_STUrviZService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\DataController::urlAction' => '?',
            'App\\Controller\\MainController::homebrewAction' => '?',
            'App\\Controller\\MainController::indexAction' => '?',
            'App\\Controller\\MainController::sheetAction' => '?',
            'App\\Controller\\MainController::tokensAction' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\DataController:urlAction' => '?',
            'App\\Controller\\MainController:homebrewAction' => '?',
            'App\\Controller\\MainController:indexAction' => '?',
            'App\\Controller\\MainController:sheetAction' => '?',
            'App\\Controller\\MainController:tokensAction' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]));
    }
}
