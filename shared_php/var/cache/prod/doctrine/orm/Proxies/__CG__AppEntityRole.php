<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Role extends \App\Entity\Role implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'identifier', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'edition', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'firstNight', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'firstNightReminder', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'otherNight', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'otherNightReminder', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'reminders', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'remindersGlobal', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'setup', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'ability', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'locale', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'jinxes', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'tricks', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'special'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'identifier', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'edition', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'firstNight', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'firstNightReminder', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'otherNight', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'otherNightReminder', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'reminders', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'remindersGlobal', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'setup', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'ability', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'locale', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'jinxes', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'tricks', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'special'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Role $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifier(string $identifier): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifier', [$identifier]);

        return parent::setIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEdition(?\App\Entity\Edition $edition): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEdition', [$edition]);

        return parent::setEdition($edition);
    }

    /**
     * {@inheritDoc}
     */
    public function getEdition(): ?\App\Entity\Edition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEdition', []);

        return parent::getEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam(\App\Entity\Team $team): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', [$team]);

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam(): ?\App\Entity\Team
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', []);

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstNight(int $firstNight): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstNight', [$firstNight]);

        return parent::setFirstNight($firstNight);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstNight(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstNight', []);

        return parent::getFirstNight();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstNightReminder(string $firstNightReminder): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstNightReminder', [$firstNightReminder]);

        return parent::setFirstNightReminder($firstNightReminder);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstNightReminder(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstNightReminder', []);

        return parent::getFirstNightReminder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtherNight(int $otherNight): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtherNight', [$otherNight]);

        return parent::setOtherNight($otherNight);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherNight(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherNight', []);

        return parent::getOtherNight();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtherNightReminder(string $otherNightReminder): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtherNightReminder', [$otherNightReminder]);

        return parent::setOtherNightReminder($otherNightReminder);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherNightReminder(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherNightReminder', []);

        return parent::getOtherNightReminder();
    }

    /**
     * {@inheritDoc}
     */
    public function setReminders(array $reminders): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReminders', [$reminders]);

        return parent::setReminders($reminders);
    }

    /**
     * {@inheritDoc}
     */
    public function getReminders(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReminders', []);

        return parent::getReminders();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemindersGlobal(array $remindersGlobal): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemindersGlobal', [$remindersGlobal]);

        return parent::setRemindersGlobal($remindersGlobal);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemindersGlobal(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemindersGlobal', []);

        return parent::getRemindersGlobal();
    }

    /**
     * {@inheritDoc}
     */
    public function setSetup(bool $setup): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetup', [$setup]);

        return parent::setSetup($setup);
    }

    /**
     * {@inheritDoc}
     */
    public function getSetup(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetup', []);

        return parent::getSetup();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbility(string $ability): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbility', [$ability]);

        return parent::setAbility($ability);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbility(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbility', []);

        return parent::getAbility();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(string $image): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslatableLocale(string $locale): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranslatableLocale', [$locale]);

        return parent::setTranslatableLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function addJinx(\App\Entity\Jinx $jinx): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addJinx', [$jinx]);

        return parent::addJinx($jinx);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJinx(\App\Entity\Jinx $jinx): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJinx', [$jinx]);

        return parent::removeJinx($jinx);
    }

    /**
     * {@inheritDoc}
     */
    public function getJinxes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJinxes', []);

        return parent::getJinxes();
    }

    /**
     * {@inheritDoc}
     */
    public function addTrick(\App\Entity\Jinx $trick): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrick', [$trick]);

        return parent::addTrick($trick);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTrick(\App\Entity\Jinx $trick): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTrick', [$trick]);

        return parent::removeTrick($trick);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrickes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrickes', []);

        return parent::getTrickes();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecial(array $special): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecial', [$special]);

        return parent::setSpecial($special);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecial(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecial', []);

        return parent::getSpecial();
    }

}
